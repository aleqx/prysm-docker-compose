version: "3.7"

x-logging: &logging
        logging:
                driver: "json-file"
                options:
                        max-file: "10"
                        max-size: "100m"

services:
        geth:
                container_name: geth
                image: ethereum/client-go:v1.9.14
                restart: always
                hostname: geth
                command: --goerli --rpc --rpcport=8545 --rpcaddr=0.0.0.0 --ws --wsaddr=0.0.0.0 --wsport=8546 --wsorigins="*" --rpcvhosts="*" --allow-insecure-unlock --rpcapi="db,eth,net,web3,personal"
                ports:
                        - 30303:30303/tcp
                        - 30303:30303/udp
                        - 127.0.0.1:8545:8545
                volumes:
                        - ./geth:/root/.ethereum
                <<: *logging
        beacon:
                container_name: beacon-chain
                image: gcr.io/prysmaticlabs/prysm/beacon-chain:${PRYSM_DOCKER_TAG}
                restart: always
                hostname: beacon-chain
                depends_on:
                        - geth
                command: --config-file=/config/beacon.yaml
                ports:
                        - 127.0.0.1:4000:4000
                        - 13000:13000
                        - 12000:12000
                volumes:
                        - ./config/beacon.yaml:/config/beacon.yaml:ro
                        - ./beacon:/data
                <<: *logging
        validator:
                container_name: validator
                image: gcr.io/prysmaticlabs/prysm/validator:${PRYSM_DOCKER_TAG}
                restart: on-failure
                hostname: validator
                depends_on:
                        - beacon
                command: --config-file=/config/validator.yaml
                volumes:
                        - ./config/validator.yaml:/config/validator.yaml:ro
                        - ./validator:/data
                <<: *logging
        slasher:
                container_name: slasher
                image: gcr.io/prysmaticlabs/prysm/slasher:${PRYSM_DOCKER_TAG}
                restart: always
                hostname: slasher
                depends_on:
                        - beacon
                command: --config-file=/config/slasher.yaml
                volumes:
                        - ./config/slasher.yaml:/config/slasher.yaml:ro
                        - ./slasher:/data
                <<: *logging
        prometheus:
                container_name: prometheus
                image: prom/prometheus:v2.19.0
                user: root # https://github.com/prometheus/prometheus/issues/5976
                restart: on-failure
                hostname: prometheus
                command: --storage.tsdb.retention.time=31d --config.file=/etc/prometheus/prometheus.yml
                ports:
                        - 127.0.0.1:9090:9090
                volumes:
                        - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
                        - ./prometheus:/prometheus
                <<: *logging
        grafana:
                container_name: grafana
                image: grafana/grafana:7.0.0
                restart: on-failure
                hostname: grafana
                depends_on:
                        - prometheus
                ports:
                        - 127.0.0.1:3000:3000
                volumes:
                        - ./grafana/provisioning:/etc/grafana/provisioning
                <<: *logging
        elasticsearch:
                container_name: elasticsearch
                image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
                restart: on-failure
                hostname: elasticsearch
                ports:
                        - 127.0.0.1:9200:9200
                        - 127.0.0.1:9300:9300
                environment:
                        ES_JAVA_OPTS: "-Xmx256m -Xms256m"
                        discovery.type: single-node
                volumes:
                        - ./config/elk/elasticsearch.yaml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
                        - ./elasticsearch:/usr/share/elasticsearch/data
                <<: *logging
        logstash:
                container_name: logstash
                image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
                restart: on-failure
                hostname: logstash
                depends_on:
                        - elasticsearch
                ports:
                        - 127.0.0.1:5044:5044
                        - 127.0.0.1:9600:9600
                environment:
                        LS_JAVA_OPTS: "-Xmx256m -Xms256m"
                volumes:
                        - ./config/elk/logstash/logstash.yaml:/usr/share/logstash/config/logstash.yml:ro
                        - ./config/elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
                <<: *logging
        kibana:
                container_name: kibana
                image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
                restart: on-failure
                hostname: kibana
                depends_on:
                        - elasticsearch
                ports:
                        - 127.0.0.1:5601:5601
                volumes:
                        - ./config/elk/kibana.yaml:/usr/share/kibana/config/kibana.yml:ro
                <<: *logging